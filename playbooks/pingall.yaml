---
- name: Ping IP addresses from Cisco devices
  hosts: cisco
  gather_facts: false
  vars:
    ipaddresses:
      - 1.1.1.1
      - 10.0.70.20
      - 10.0.70.10
      - 10.0.70.11
      - 10.0.70.12
  tasks:
    - name: Send ping command from Cisco device
      cisco.ios.ios_command:
        commands:
          - "ping {{ item }}"
      loop: "{{ ipaddresses }}"
      register: cisco_ping
      ignore_errors: true

    - name: Build Cisco ping summary
      set_fact:
        ping_results_summary: >-
          {{
            (ping_results_summary | default([]))
            +
            [ {
                "source": inventory_hostname,
                "destination": item.0,
                "status": ( "SUCCESS" if item.1.failed is not defined and item.1.rc == 0 else "FAIL" )
              } ]
          }}
      loop: "{{ ipaddresses | zip(cisco_ping.results) | list }}"

- name: Ping IP addresses from Linux servers
  hosts: linux_servers
  gather_facts: false
  vars:
    ipaddresses:
      - 1.1.1.1
      - 10.0.70.20
      - 10.0.70.10
      - 10.0.70.11
      - 10.0.70.12
  tasks:
    - name: Send ping command from Linux server
      ansible.builtin.command: "ping -c 2 -W 1 {{ item }}"
      loop: "{{ ipaddresses }}"
      register: linux_ping
      ignore_errors: true

    - name: Build Linux ping summary
      set_fact:
        ping_results_summary: >-
          {{
            (ping_results_summary | default([]))
            +
            [ {
                "source": inventory_hostname,
                "destination": item.0,
                "status": ( "SUCCESS" if item.1.rc == 0 else "FAIL" )
              } ]
          }}
      loop: "{{ ipaddresses | zip(linux_ping.results) | list }}"

- name: Ping hostnames from Linux servers
  hosts: linux_servers
  gather_facts: false
  vars:
    hostnames:
      - SD-HQ-WIN1.solardynamics.eu
  tasks:
    - name: Send ping command for hostnames from Linux server
      ansible.builtin.command: "ping -c 2 -W 1 {{ item }}"
      loop: "{{ hostnames }}"
      register: hostname_ping
      ignore_errors: true

    - name: Build hostname ping summary
      set_fact:
        ping_results_summary: >-
          {{
            (ping_results_summary | default([]))
            +
            [ {
                "source": inventory_hostname,
                "destination": item.0,
                "status": ( "SUCCESS" if item.1.rc == 0 else "FAIL" )
              } ]
          }}
      loop: "{{ hostnames | zip(hostname_ping.results) | list }}"

- name: Aggregate and display ping results from all hosts
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Gather all ping summaries from Cisco and Linux hosts
      set_fact:
        all_ping_results: >-
          {{
            all_ping_results | default([]) +
            ( hostvars[item].ping_results_summary | default([]) )
          }}
      loop: "{{ groups['cisco'] + groups['linux_servers'] }}"
      run_once: true

    - name: Display ping results table
      debug:
        msg: |
          ===============================================
          | Source           | Destination      | Status  |
          ===============================================
          {% for result in all_ping_results %}
          | {{ result.source | string | ljust(16) }} | {{ result.destination | string | ljust(16) }} | {{ result.status | string | ljust(7) }} |
          {% endfor %}
          ===============================================
      run_once: true
