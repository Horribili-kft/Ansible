---
- name: Ping selected hosts from Linux servers
  hosts: linux_servers
  gather_facts: no
  vars:
    ping_targets:
      - { name: "Publikus Internet 1", target: "1.1.1.1" }
      - { name: "Publikus Internet 2", target: "8.8.8.8" }
      - { name: "SD-HQ-WIN1", target: "10.0.70.20" }
      - { name: "SD-HQ-LIN1", target: "10.0.70.10" }
      - { name: "SD-HQ-LIN2", target: "10.0.70.12" }
      - { name: "Budapest", target: "82.1.79.33" }
      - { name: "Székesfehérvár", target: "82.1.79.129" }
      - { name: "Tatabánya", target: "82.1.79.145" }
      - { name: "Győr HQ Backup ISP", target: "85.16.100.3" }
      - { name: "Private DNS resolution", target: "sd-hq-win1.solardynamics.eu" }
      - { name: "Public DNS resolution", target: "linux.org" }

  tasks:
    - name: Ping each target from Linux servers
      ansible.builtin.command:
        cmd: "ping -c 3 {{ item.target }}"
      register: ping_result
      ignore_errors: yes
      changed_when: false
      loop: "{{ ping_targets }}"
      loop_control:
        label: "{{ item.name }}"

- name: Aggregate ping results and write CSV
  hosts: SD-HQ-NMS
  gather_facts: no
  tasks:
    - name: Write aggregated CSV results to /tmp/ping_results.csv
      ansible.builtin.copy:
        dest: /tmp/ping_results.csv
        content: |
          source,destination,result
          {%- for host in groups['linux_servers'] if hostvars[host].ping_result is defined %}
            {%- for item in hostvars[host].ping_result.results %}
          {{ host }},{{ item.item.target }},{{ 'success' if item.rc == 0 else 'fail' }}
            {%- endfor %}
          {%- endfor %}
